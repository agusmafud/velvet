{"version":3,"sources":["components/Home/Hero.js","components/Home/index.js","containers/HomeContainer.js","VelvetApp.js","serviceWorker.js","index.js","images/soon.jpeg"],"names":["withStyles","theme","root","paddingTop","spacing","unit","paddingBottom","textAlign","soonImagen","boxShadow","shadows","borderRadius","width","maxWidth","marginBottom","_ref","classes","react_default","a","createElement","className","Fade_default","cascade","duration","src","soon","alt","Typography_default","color","variant","align","component","paragraph","Home","Fragment","Home_Hero","HomeContainer","components_Home","Component","withRouter","createMuiTheme","palette","primary","main","secondary","typography","useNextVariants","VelvetApp","styles","Helmet","CssBaseline_default","Switch","Route","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","BrowserRouter","basename","process","src_VelvetApp","document","getElementById","URL","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1e165917.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nimport soon from '../../images/soon.jpeg';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nconst styles = theme => ({        \r\n    root: {                                            \r\n        paddingTop: theme.spacing.unit * 5,       \r\n        paddingBottom: theme.spacing.unit * 5,      \r\n        textAlign: 'center',  \r\n    },    \r\n    soonImagen: {\r\n        boxShadow: theme.shadows[1],\r\n        borderRadius: 4,\r\n        width: '90%',\r\n        maxWidth: 400,\r\n        marginBottom: theme.spacing.unit * 2, \r\n    }\r\n    \r\n});\r\n\r\nconst Hero = ({ classes }) => {\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Fade cascade duration={3500}>\r\n                <div>                                    \r\n                    <img src={soon} className={classes.soonImagen} alt='Proximamente, Velvet chocolates' />\r\n                    <Typography color='primary' variant=\"h4\" align=\"center\" component=\"h1\" paragraph>\r\n                        Pr√≥ximamente...\r\n                    </Typography>\r\n                </div>                \r\n            </Fade>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nHero.propTypes = {\r\n    classes: PropTypes.object.isRequired,    \r\n};\r\n\r\nexport default withStyles(styles)(Hero);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Hero from './Hero';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Hero />\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    menu: PropTypes.bool.isRequired,\r\n    toggleMenu: PropTypes.func.isRequired,\r\n    handleResponderEjemploClick: PropTypes.func.isRequired,\r\n    handleResultadosEjemploClick: PropTypes.func.isRequired,\r\n    handleCrearCataClick: PropTypes.func.isRequired,\r\n    handleAcercaDeClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\n\r\nclass HomeContainer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Home                \r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(HomeContainer);","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { Helmet } from \"react-helmet\";\n\nimport HomeContainer from './containers/HomeContainer';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {      \n      main: '#8a6284',            \n    },\n    secondary: {      \n      main: '#98ad38',      \n    },\n    typography: {\n      useNextVariants: true,\n    },\n  },\n});\n\nclass VelvetApp\n extends Component {\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>   \n        \n        <Helmet>          \n          <title>Velvet chocolates</title>                    \n        </Helmet>   \n        \n        <CssBaseline />\n        \n        <Switch>                                                 \n          <Route path=\"/\" component={HomeContainer} />\n        </Switch>        \n\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default VelvetApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport VelvetApp from './VelvetApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>    \n        <VelvetApp />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();","module.exports = __webpack_public_path__ + \"static/media/soon.0a9affef.jpeg\";"],"sourceRoot":""}